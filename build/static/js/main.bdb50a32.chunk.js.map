{"version":3,"sources":["components/App.js","util/index.js","components/SinglePost.js","components/EditPost.js","components/Footer.js","components/Home.js","components/LogReg.js","components/Posts.js","components/WriteMessage.js","components/PostView.js","components/Search.js","components/WritePost.js","index.js"],"names":["App","useState","active","setActive","currentPostId","setCurrentPostId","loggedIn","setLoggedIn","messages","setMessages","posts","setPosts","token","setToken","userData","setUserData","isExpanded","setIsExpanded","history","useHistory","fetchPosts","a","fetch","process","response","json","results","data","props","useEffect","error","console","className","to","onClick","push","id","exact","path","callApi","url","method","body","options","toUpperCase","headers","JSON","stringify","SinglePost","children","post","title","author","username","description","price","location","willDeliver","EditPost","setLocation","setTitle","setDescription","setPrice","setWillDeliver","postId","useParams","find","_id","handleWrite","e","preventDefault","postsResp","onSubmit","type","name","value","placeholder","onChange","target","style","height","min","step","disabled","Footer","href","Home","src","width","map","message","fromUser","content","key","LogReg","setUsername","password","setPassword","verPass","setVerPass","params","user","resp","userResp","length","Posts","handleDelete","WriteMessage","setContent","handleSubmit","PostView","Search","query","setQuery","isTitle","handleFilter","filteredPosts","filter","toLowerCase","includes","WritePost","ReactDOM","render","document","querySelector"],"mappings":"6PA4HeA,EA1GH,WACV,MAA8BC,oBAAS,GAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAA4CF,mBAAS,IAArD,mBAAQG,EAAR,KAAuBC,EAAvB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAQK,EAAR,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,IAA3C,mBAAQO,EAAR,KAAkBC,EAAlB,KACA,EAA4BR,mBAAS,IAArC,mBAAQS,EAAR,KAAeC,EAAf,KACA,EAA4BV,mBAAS,IAArC,mBAAQW,EAAR,KAAeC,EAAf,KACA,EAAkCZ,mBAAS,IAA3C,mBAAQa,EAAR,KAAkBC,EAAlB,KACA,EAAsCd,oBAAS,GAA/C,mBAAQe,EAAR,KAAoBC,EAApB,KAEMC,EAAUC,cAEVC,EAAU,uCAAG,gCAAAC,EAAA,sEACMC,MAAM,GAAD,OAfDC,gEAeC,WADX,cACXC,EADW,gBAEKA,EAASC,OAFd,OAEXC,EAFW,QAGXhB,EAAQgB,EAAQC,KAAKjB,QAChBC,EAASD,GAJH,2CAAH,qDAOVkB,EAAQ,CACZ1B,SACAC,YACAC,gBACAC,mBACAC,WACAC,cACAK,QACAC,WACAH,QACAC,WACAG,WACAC,cACAP,WACAC,cACAO,aACAC,gBAEAG,cAaF,OARAS,qBAAU,WACR,IACET,IACA,MAAOU,GACPC,QAAQD,MAAMA,MAEf,CAAClB,IAEG,oCACH,4BAAQoB,UAAU,eAChB,kBAAC,IAAD,CAAMC,GAAI,QAAQD,UAAU,QAAO,kDAEnC,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAA5B,SACA,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,QAEEpB,EACQ,4BAAQsB,QAAS,WAAQrB,EAAS,IAAKN,GAAY,GAAQW,EAAQiB,KAAK,OAAQH,UAAU,6BAA1F,WACA,kBAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,sBAApC,oBAKd,0BAAMI,GAAG,WACP,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAChB,kBAAC,EAAWV,IAGd,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,KAChB,kBAAC,EAASV,IAGZ,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,SAChB,kBAAC,EAASV,IAGZ,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAUV,IAGb,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAWV,IAGd,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,kBAChB,kBAAC,EAAaV,IAGhB,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,uBAChB,kBAAC,EAAaV,IAGhB,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAcV,IAGjB,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAiBV,KAGxB,kBAAC,EAAD,QCtHSW,EAAO,uCAAG,yCAAAlB,EAAA,6DAAQmB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAQ7B,EAArB,EAAqBA,MAAO8B,EAA5B,EAA4BA,KAA5B,SAEbC,EAAU,CACdF,OAAQA,EAASA,EAAOG,cAAgB,MACxCC,QAAS,CACP,eAAgB,oBAElBH,KAAMI,KAAKC,UAAUL,IAEnB9B,IAAO+B,EAAQE,QAAR,+BAA6CjC,IATrC,SAWIU,MAAM,GAAD,OAbDC,iEAaC,OAAyBiB,GAAOG,GAXzC,cAWbnB,EAXa,gBAYAA,EAASC,OAZT,YAYbE,EAZa,QAaXG,MAbW,uBAcVH,EAAKG,MAdK,iCAgBZH,GAhBY,kCAkBnBI,QAAQD,MAAR,MAlBmB,0DAAH,sDCiBLkB,EAjBI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAE5B,OAAOA,EACL,yBAAKlB,UAAU,gBACb,0BAAMA,UAAU,qBAAoB,wBAAIA,UAAU,cAAckB,EAAKC,OAAW,0BAAMnB,UAAU,UAAhB,MAA4B,0BAAMA,UAAU,eAAekB,EAAKE,OAAOC,YACvJ,0BAAMrB,UAAU,eAAekB,EAAKI,aACpC,6BACA,0BAAMtB,UAAU,eACZ,0BAAMA,UAAU,oBAAmB,wBAAIA,UAAU,oBAAd,UAAnC,IAAiFkB,EAAKK,OACtF,0BAAMvB,UAAU,oBAAmB,wBAAIA,UAAU,oBAAd,aAAnC,IAAoFkB,EAAKM,UACzF,0BAAMxB,UAAU,oBAAmB,wBAAIA,UAAU,oBAAd,iBAAnC,IAAyFkB,EAAKO,YAAc,MAAQ,MAClHR,IAGR,cCiGSS,EA1GE,SAAC,GAAgC,IAA9B/C,EAA6B,EAA7BA,SAAUD,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,MACjC,EAAkCX,mBAAS,IAA3C,mBAAQuD,EAAR,KAAkBG,EAAlB,KACA,EAA4B1D,mBAAS,IAArC,mBAAQkD,EAAR,KAAeS,EAAf,KACA,EAAwC3D,mBAAS,IAAjD,mBAAQqD,EAAR,KAAqBO,EAArB,KACA,EAA4B5D,mBAAS,IAArC,mBAAQsD,EAAR,KAAeO,EAAf,KACA,EAAwC7D,oBAAS,GAAjD,mBAAQwD,EAAR,KAAqBM,EAArB,KAEOC,EAAUC,cAAVD,OACD9C,EAAUC,cAEV+B,EAAOxC,EAAMwD,MAAK,SAAAhB,GAAI,OAAIA,EAAKiB,MAAQH,KAEvCI,EAAW,uCAAG,WAAOC,GAAP,eAAAhD,EAAA,6DAChBgD,EAAEC,iBADc,SAEO/B,EAAQ,CAC3BC,IAAI,UAAD,OAAYwB,GACfvB,OAAQ,QACR7B,QACA8B,KAAM,CACFQ,KAAM,CACFM,WACAL,QACAG,cACAC,MAAM,IAAD,OAAMA,GACXE,kBAZI,8BAgBQlB,EAAQ,CAACC,IAAK,SAAU5B,UAhBhC,OAgBV2D,EAhBU,OAiBhB5D,EAAS4D,EAAU5C,KAAKjB,OACxBQ,EAAQiB,KAAK,UAlBG,2CAAH,sDAqBjB,OAAO,6BACH,yCAEA,kBAAC,EAAD,CAAYe,KAAMA,IAElB,0BAAMsB,SAAUJ,GACZ,kCACI,wCACA,2BACIpC,UAAU,cACVyC,KAAK,OACLC,KAAK,QACLC,MAAOxB,EACPyB,YAAW,UAAK1B,EAAKC,OACrB0B,SAAU,SAACR,GAAD,OAAOT,EAASS,EAAES,OAAOH,WAI3C,kCACA,8CACI,2BACI3C,UAAU,cACVyC,KAAK,OACLC,KAAK,cACLC,MAAOrB,EACPsB,YAAW,UAAK1B,EAAKI,aACrByB,MAAO,CAACC,OAAQ,KAChBH,SAAU,SAACR,GAAD,OAAOR,EAAeQ,EAAES,OAAOH,WAIjD,kCACA,wCACI,2BACI3C,UAAU,cACVyC,KAAK,SACLC,KAAK,QACLO,IAAI,IACJC,KAAK,MACLP,MAAOpB,EACPqB,YAAW,UAAK1B,EAAKK,OACrBsB,SAAU,SAACR,GAAD,OAAOP,EAASO,EAAES,OAAOH,WAI3C,kCACI,2CACA,2BACI3C,UAAU,cACVyC,KAAK,OACLC,KAAK,QACLC,MAAOnB,EACPoB,YAAW,UAAK1B,EAAKM,UACrBqB,SAAU,SAACR,GAAD,OAAOV,EAAYU,EAAES,OAAOH,WAI9C,kCACI,oDACA,4BACID,KAAK,cACLE,YAAW,UAAK1B,EAAKO,aACrBkB,MAAOlB,EACPoB,SAAU,SAACR,GAAD,OAAON,EAAeM,EAAES,OAAOH,SACzC,4BAAQA,MAAM,SAAd,MACA,4BAAQA,MAAM,QAAd,SAGR,4BAAQF,KAAK,SAASU,UAAYhC,IAAUG,IAAgBC,EAAQvB,UAAU,oBAA9E,WCjGGoD,EATA,WACX,OAAO,gCACH,2DACA,0BAAMpD,UAAU,cAAhB,YACa,uBAAGqD,KAAK,uDAAR,iBCkENC,EArEF,SAAC,GAAsC,IAApChF,EAAmC,EAAnCA,SAAUE,EAAyB,EAAzBA,SAAUM,EAAe,EAAfA,SAC1BJ,EAAQI,EAASJ,MACvB,OAAIJ,EACG,yBAAK0B,UAAU,WAElBlB,EACU,wBAAIkB,UAAU,eAAd,qBAAwClB,EAASuC,UAAjD,KACA,GAEV,kBAAC,IAAD,CAAMpB,GAAG,SAASD,UAAU,eAAc,yBAAKuD,IAAI,kBAAkBP,OAAO,KAAKQ,MAAM,OAAvF,qBACA,yBAAKxD,UAAU,aACb,wBAAIA,UAAU,kBAAd,qBAEExB,EAASiF,KAAI,SAAAC,GACX,OAAO,oCACN5E,EAASqD,MAAQuB,EAAQC,SAASxB,IAClC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,kBAAkB0D,EAAQC,SAAStC,SAAlD,iBAA0EqC,EAAQxC,KAAKC,MAAvF,MACA,6BAAMuC,EAAQE,UAEjB,OAIN,wBAAI5D,UAAU,kBAAd,iBAEExB,EAASiF,KAAI,SAAAC,GACX,OAAO,oCACN5E,EAASqD,MAAQuB,EAAQC,SAASxB,IAClC,yBAAKnC,UAAU,YACX,yBAAKA,UAAU,qBAAf,oBAAqD0D,EAAQxC,KAAKC,MAAlE,MACA,6BAAMuC,EAAQE,UAEjB,QAKR,yBAAK5D,UAAU,cAEXtB,EAAQ,wBAAIsB,UAAU,mBAAd,uBAA2D,GAInEtB,EAAQA,EAAM+E,KAAI,SAAAvC,GACd,OAAO,oCACH,yBAAKlB,UAAU,YAAY6D,IAAI,YAC3B,yBAAK7D,UAAU,kBAAkBkB,KAAMA,GAAOA,EAAKC,OAAQD,EAAKhD,QAAN,aAA1D,KACA,6BAAMgD,EAAKI,kBAGlB,KAKD,yBAAKtB,UAAU,mBACvB,wBAAIA,UAAU,eAAd,kBACA,6BACA,yBAAKA,UAAU,SAAf,qLACA,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,qBAApC,cADJ,2BAGA,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,qBAA5B,cADJ,yBC0DO8D,EAvHA,SAAC,GAAyD,IAAvDvF,EAAsD,EAAtDA,YAAaE,EAAyC,EAAzCA,YAAaM,EAA4B,EAA5BA,YAAaF,EAAe,EAAfA,SACrD,EAAkCZ,mBAAS,IAA3C,mBAAQoD,EAAR,KAAkB0C,EAAlB,KACA,EAAkC9F,mBAAS,IAA3C,mBAAQ+F,EAAR,KAAkBC,EAAlB,KACA,EAAgChG,mBAAS,IAAzC,mBAAQiG,EAAR,KAAiBC,EAAjB,KACMC,EAASnC,cACT/C,EAAUC,cAGhB,OAAO,oCACP,6BAEI,yBAAKa,UAAU,kBACX,yBAAKA,UAAU,gBAEO,aAAlBoE,EAAO3D,OACD,wBAAIT,UAAU,UAAd,0BACA,wBAAIA,UAAU,UAAd,0BAGV,0BAAMA,UAAU,UAAUwC,SAAQ,uCAAE,WAAOH,GAAP,iBAAAhD,EAAA,6DAChCgD,EAAEC,iBAD8B,kBAGT/B,EAAS,CACxBC,IAAI,UAAD,OAAY4D,EAAO3D,QACtBA,OAAQ,OACRC,KAAM,CACF2D,KAAM,CACFhD,WACA2C,eATgB,YAGtBM,EAHsB,QAcpB3E,KAdoB,iCAeDY,EAAQ,CAACC,IAAK,YAAa5B,MAAO0F,EAAK3E,KAAKf,QAf3C,OAelB2F,EAfkB,OAiBxB1F,EAASyF,EAAK3E,KAAKf,OACnBG,EAAYwF,EAAS5E,MACrBpB,GAAY,GACZE,EAAY8F,EAAS5E,KAAKnB,UAEtB8F,EAAK3E,KAAKf,OACZM,EAAQiB,KAAK,KAvBS,0DA4B5BJ,QAAQD,MAAR,MA5B4B,kEAAF,uDA+B9B,8BAAUE,UAAU,kBAChB,4CACA,2BACIA,UAAU,cACVyC,KAAK,OACLC,KAAK,aACLE,YAAY,uBACZC,SAAU,SAACR,GAAD,OAAO0B,EAAY1B,EAAES,OAAOH,WAI9C,8BAAU3C,UAAU,kBAChB,2CACA,2BACIA,UAAU,cACVyC,KAAK,WACLC,KAAK,WACLE,YAAY,gCACZC,SAAU,SAACR,GAAD,OAAO4B,EAAY5B,EAAES,OAAOH,WAK5B,aAAlByB,EAAO3D,OACD,8BAAUT,UAAU,kBAClB,kDACI,2BACIA,UAAU,cACVyC,KAAK,WACLC,KAAK,kBACLE,YAAY,yBACZC,SAAU,SAACR,GAAD,OAAO8B,EAAW9B,EAAES,OAAOH,WAG/C,GAIY,aAAlByB,EAAO3D,OACD,4BAAQT,UAAU,eAAeyC,KAAK,SAASU,UAAWa,IAAa3C,GAAY2C,EAASQ,OAAS,GAAKR,IAAaE,GAAvH,YAGA,4BAAQlE,UAAU,eAAeyC,KAAK,SAASU,UAAWa,IAAa3C,GAAY2C,EAASQ,OAAS,GAArG,SAMY,aAAlBJ,EAAO3D,OACL,oCACE,+DACA,kBAAC,IAAD,CAAMR,GAAG,iBAAiBD,UAAU,qBAApC,0BAIF,oCACE,+DACA,kBAAC,IAAD,CAAMC,GAAG,oBAAoBD,UAAU,qBAAvC,iCC7DLyE,EAvCD,SAAC,GAA8D,IAA7D9F,EAA4D,EAA5DA,SAAUS,EAAkD,EAAlDA,WAAYd,EAAsC,EAAtCA,SAAUI,EAA4B,EAA5BA,MAAOE,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,SAEpD4F,GADUvF,cACE,uCAAG,WAAO6C,GAAP,SAAA3C,EAAA,sEACKkB,EAAQ,CAC1BE,OAAQ,SACRD,IAAI,UAAD,OAAYwB,GACfpD,UAJa,8BAOXQ,IAPW,2CAAH,uDAUlB,OAAO,oCACH,6BACI,yBAAKY,UAAU,gBACX,wBAAIA,UAAU,eAAd,SAEIpB,EACU,kBAAC,IAAD,CAAMqB,GAAG,SAASD,UAAU,eAAc,yBAAKuD,IAAI,kBAAkBP,OAAO,KAAKQ,MAAM,OAAvF,qBACA,kBAAC,IAAD,CAAMvD,GAAG,SAASD,UAAU,wBAAuB,yBAAKuD,IAAI,kBAAkBP,OAAO,KAAKQ,MAAM,OAAhG,qBAEd,kBAAC,EAAD,CAAQ9E,MAAOA,EAAOC,SAAUA,EAAUS,WAAYA,KAGtDV,EAAM+E,KAAI,SAAAvC,GAAI,OAAI,kBAAC,EAAD,CAAY2C,IAAK3C,EAAKiB,IAAKjB,KAAMA,EAAM5C,SAAUA,GAE3D4C,GAAQ,kBAAC,IAAD,CAAMjB,GAAE,iBAAYiB,EAAKiB,KAAOnC,UAAU,oBAA1C,QAGRkB,EAAKE,OAAOe,MAAQrD,EAASqD,KAAO,kBAAC,IAAD,CAAMlC,GAAE,sBAAiBiB,EAAKiB,KAAOnC,UAAU,oBAA/C,QAGpCkB,EAAKE,OAAOe,MAAQrD,EAASqD,KAAO,4BAAQnC,UAAU,cAAcE,QAAS,kBAAMwE,EAAaxD,EAAKiB,OAAM,yBAAKoB,IAAK,mBAAoBC,MAAM,KAAKR,OAAO,OAAvH,iBCP7C2B,EAjCM,SAAC,GAAmB,IAAlBzD,EAAiB,EAAjBA,KAAMtC,EAAW,EAAXA,MAC3B,EAA+BX,mBAAS,IAAxC,mBAAO2F,EAAP,KAAgBgB,EAAhB,KACM1F,EAAUC,cAEV0F,EAAY,uCAAG,WAAOxC,GAAP,eAAAhD,EAAA,6DACnBgD,EAAEC,iBADiB,SAGT9B,EAHS,iBAGOU,EAAKiB,IAHZ,sBAII5B,EAAQ,CACvBE,OAAQ,OACRD,MACA5B,QACA8B,KAAM,CACFgD,QAAS,CACTE,cAVO,cAcf1E,EAAQiB,KAAK,MAdE,gDAiBfJ,QAAQD,MAAR,MAjBe,yDAAH,sDAqBlB,OAAO,oCACL,0BAAM0C,SAAUqC,EAAc7E,UAAU,eACtC,2BAAOA,UAAU,gBAAgB2C,MAAOiB,EAAShB,YAAY,gBAAgBC,SAAU,SAACR,GAAD,OAAOuC,EAAWvC,EAAES,OAAOH,UAClH,4BAAQ3C,UAAU,sBAAsByC,KAAK,SAASU,UAAWS,GAAjE,WCVSkB,EAhBE,SAAC,GAAwC,IAAvCpG,EAAsC,EAAtCA,MAAOJ,EAA+B,EAA/BA,SAAUQ,EAAqB,EAArBA,SAAUF,EAAW,EAAXA,MACrCoD,EAAUC,cAAVD,OACDd,EAAOxC,EAAMwD,MAAK,SAAAhB,GAAI,OAAIA,EAAKiB,MAAQH,KAE7C,OAAO,oCACL,kBAAC,EAAD,CAAYd,KAAMA,GAEbA,GAAQA,EAAK1C,UAAY0C,EAAK1C,SAASiF,KAAI,SAAAC,GAAO,OAAI,yBAAKG,IAAKH,EAAQvB,KAAlB,YAAiCuB,EAAQE,YAGhGtF,GAAYQ,EAASqD,MAAQjB,EAAKE,OAAOe,KAAO,kBAAC,EAAD,CAAcjB,KAAMA,EAAMtC,MAAOA,OCS1EmG,EAtBA,SAAC,GAAmC,IAAlC3F,EAAiC,EAAjCA,WAAYV,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAEhC,EAA0BV,mBAAS,IAAnC,mBAAO+G,EAAP,KAAcC,EAAd,KACA,EAA8BhH,oBAAS,GAAvC,mBAAOiH,EAAP,KAEMC,GAFN,KAEkB,uCAAG,4BAAA9F,EAAA,yDAGX+F,EADNF,EACsBxG,EAAM2G,QAAO,SAAAnE,GAAI,OAAIA,EAAKC,MAAMmE,cAAcC,SAAUP,EAAMM,kBAC9D5G,EAAM2G,QAAO,SAAAnE,GAAI,OAAIA,EAAKI,YAAYgE,cAAcC,SAAUP,EAAMM,kBAE1F3G,EAASyG,GANQ,KAOP,KAAVJ,GAPiB,qCAOK5F,IAPL,2CAAH,sDAUlB,OAAO,0BAAMY,UAAU,cAAc6C,SAAUsC,GAC3C,2BAAOzC,KAAK,SAASD,KAAK,OAAOG,YAAY,eAAe5C,UAAU,eAAe2C,MAAOqC,EAAOnC,SAAU,SAACR,GAAD,OAAM4C,EAAS5C,EAAES,OAAOH,UACrI,4BAAQF,KAAK,SAAQzC,UAAU,iBAA/B,SACA,gCCqFOwF,EArGG,SAAC,GAAyB,IAAvB7G,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,EAAkCX,mBAAS,IAA3C,mBAAQuD,EAAR,KAAkBG,EAAlB,KACA,EAA4B1D,mBAAS,IAArC,mBAAQkD,EAAR,KAAeS,EAAf,KACA,EAAwC3D,mBAAS,IAAjD,mBAAQqD,EAAR,KAAqBO,EAArB,KACA,EAA4B5D,mBAAS,IAArC,mBAAQsD,EAAR,KAAeO,EAAf,KACA,EAAwC7D,oBAAS,GAAjD,mBAAQwD,EAAR,KAAqBM,EAArB,KAEM7C,EAAUC,cAEViD,EAAW,uCAAG,WAAOC,GAAP,eAAAhD,EAAA,6DAChBgD,EAAEC,iBADc,SAEO/B,EAAQ,CAC3BC,IAAK,SACLC,OAAQ,OACR7B,QACA8B,KAAM,CACFQ,KAAM,CACFM,WACAL,QACAG,cACAC,MAAM,IAAD,OAAMA,GACXE,kBAZI,8BAgBQlB,EAAQ,CAACC,IAAK,SAAU5B,UAhBhC,OAgBV2D,EAhBU,OAiBhB5D,EAAS4D,EAAU5C,KAAKjB,OACxBQ,EAAQiB,KAAK,UAlBG,2CAAH,sDAqBjB,OAAO,6BACH,mDAEA,0BAAMqC,SAAYJ,GACd,kCACI,wCACA,2BACIpC,UAAU,cACVyC,KAAK,OACLC,KAAK,QACLC,MAAOxB,EACPyB,YAAY,QACZC,SAAU,SAACR,GAAD,OAAOT,EAASS,EAAES,OAAOH,WAI3C,kCACA,8CACI,2BACI3C,UAAU,cACVyC,KAAK,OACLC,KAAK,cACLC,MAAOrB,EACPsB,YAAY,cACZG,MAAO,CAACC,OAAQ,KAChBH,SAAU,SAACR,GAAD,OAAOR,EAAeQ,EAAES,OAAOH,WAIjD,kCACA,wCACI,2BACI3C,UAAU,cACVyC,KAAK,SACLC,KAAK,QACLO,IAAI,IACJC,KAAK,MACLP,MAAOpB,EACPqB,YAAY,QACZC,SAAU,SAACR,GAAD,OAAOP,EAASO,EAAES,OAAOH,WAI3C,kCACI,2CACA,2BACI3C,UAAU,cACVyC,KAAK,OACLC,KAAK,QACLC,MAAOnB,EACPoB,YAAY,WACZC,SAAU,SAACR,GAAD,OAAOV,EAAYU,EAAES,OAAOH,WAI9C,kCACI,oDACA,4BACID,KAAK,cACLE,YAAY,KACZD,MAAOlB,EACPoB,SAAU,SAACR,GAAD,OAAON,EAAeM,EAAES,OAAOH,SACzC,4BAAQA,MAAM,SAAd,MACA,4BAAQA,MAAM,QAAd,SAGR,4BAAQF,KAAK,SAASU,UAAYhC,IAAUG,IAAgBC,EAAQvB,UAAU,oBAA9E,WC/FZyF,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,W","file":"static/js/main.bdb50a32.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  EditPost,\r\n  Footer, \r\n  LogReg,\r\n  Posts,\r\n  Home,\r\n  PostView,\r\n  Search,\r\n  WriteMessage,\r\n  WritePost\r\n} from './'\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst App = () => {\r\n  const [ active, setActive ] = useState(false);\r\n  const [ currentPostId, setCurrentPostId ] = useState('');\r\n  const [ loggedIn, setLoggedIn ] = useState(false);\r\n  const [ messages, setMessages ] = useState([]);\r\n  const [ posts, setPosts ] = useState([]);  \r\n  const [ token, setToken ] = useState('');\r\n  const [ userData, setUserData ] = useState({});\r\n  const [ isExpanded, setIsExpanded ] = useState(false)\r\n  \r\n  const history = useHistory();\r\n\r\n  const fetchPosts = async () => {\r\n    const response = await fetch(`${REACT_APP_BASE_URL}/posts`);            \r\n    const results = await response.json();\r\n    const posts = results.data.posts;\r\n    if (posts) setPosts(posts);\r\n  }\r\n  \r\n  const props = {\r\n    active,\r\n    setActive,\r\n    currentPostId,\r\n    setCurrentPostId, \r\n    loggedIn, \r\n    setLoggedIn, \r\n    token, \r\n    setToken, \r\n    posts, \r\n    setPosts, \r\n    userData, \r\n    setUserData, \r\n    messages, \r\n    setMessages,\r\n    isExpanded,\r\n    setIsExpanded,\r\n\r\n    fetchPosts\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    try {      \r\n      fetchPosts();      \r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  }, [token]);\r\n\r\n  return <>\r\n      <header className=\"site-header\">\r\n        <Link to ='/home' className='logo'><h1>Stranger's Things</h1></Link>       \r\n  \r\n        <div className='link-bar'>\r\n          <Link to=\"/posts\" className=\"nav-link\">Posts</Link>   \r\n          <Link to=\"/home\" className=\"nav-link\">Home</Link>\r\n          { \r\n            token\r\n                  ? <button onClick={() => { setToken(''); setLoggedIn(false); history.push('./')}} className='nav-link logout set-right'>Log out</button>\r\n                  : <Link to=\"/account/login\" className=\"nav-link set-right\">Login/Register</Link>\r\n          }\r\n        </div>\r\n      </header>\r\n  \r\n      <main id='content'>\r\n        <Route exact path=\"/account/:method\">\r\n          <LogReg {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/'>\r\n          <Home {...props} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/home\">\r\n          <Home {...props}/>\r\n        </Route>\r\n  \r\n        <Route exact path=\"/posts\">\r\n          <Posts {...props} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/search\">\r\n          <Search {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/posts/:postId'>\r\n          <PostView {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/posts/edit/:postId'>\r\n          <EditPost {...props} />\r\n        </Route>\r\n  \r\n        <Route exact path=\"/write\">\r\n          <WritePost {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/message'>\r\n          <WriteMessage {...props} />\r\n        </Route>\r\n    </main>\r\n    <Footer />\r\n  </>\r\n}\r\n\r\nexport default App;","const { REACT_APP_BASE_URL } = process.env;\r\n\r\nexport const callApi = async ({url, method, token, body}) => {\r\n  try {\r\n    const options = {\r\n      method: method ? method.toUpperCase() : 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    if (token) options.headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\r\n    const data = await response.json();\r\n    if(data.error) {\r\n      throw (data.error)\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst SinglePost = ({ children, post }) => {\r\n    \r\n    return post\r\n    ? <div className='post-listing'>\r\n        <span className='single-post-title'><h3 className='post-title'>{post.title}</h3><span className='author'>by <span className='post-author'>{post.author.username}</span></span></span>\r\n        <span className='description'>{post.description}</span>\r\n        <br />\r\n        <span className='post-bottom'>\r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Price:</h3> {post.price}</span> \r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Location:</h3> {post.location}</span>\r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Will Deliver:</h3> { post.willDeliver ? 'Yes' : 'No' }</span>\r\n            { children }            \r\n        </span>        \r\n    </div>\r\n    : 'Loading...'\r\n}\r\n\r\nexport default SinglePost;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\nimport { callApi } from '../util';\r\n\r\nimport SinglePost from './SinglePost'\r\n\r\nconst EditPost = ({ setPosts, posts, token }) => {\r\n    const [ location, setLocation ] = useState('')\r\n    const [ title, setTitle ] = useState('');    \r\n    const [ description, setDescription ] = useState('');\r\n    const [ price, setPrice ] = useState('');\r\n    const [ willDeliver, setWillDeliver ] = useState(false);\r\n        \r\n    const {postId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const post = posts.find(post => post._id === postId);\r\n\r\n    const handleWrite = async (e) => {\r\n        e.preventDefault();\r\n        const postResp = await callApi({\r\n            url: `/posts/${postId}`, \r\n            method: 'PATCH', \r\n            token, \r\n            body: {\r\n                post: {\r\n                    location, \r\n                    title, \r\n                    description, \r\n                    price: `$${price}`, \r\n                    willDeliver\r\n                }\r\n            }\r\n        });\r\n        const postsResp = await callApi({url: '/posts', token})\r\n        setPosts(postsResp.data.posts);\r\n        history.push('/posts')\r\n    }\r\n\r\n    return <div>\r\n        <h3>Edit Post</h3>\r\n\r\n        <SinglePost post={post}></SinglePost>\r\n\r\n        <form onSubmit={handleWrite}>\r\n            <fieldset>\r\n                <label>Title</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={title}  \r\n                    placeholder={`${post.title}`} \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Description</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='description'\r\n                    value={description}  \r\n                    placeholder={`${post.description}`}\r\n                    style={{height: 100}} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Price</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='number' \r\n                    name='price'\r\n                    min=\"1\"\r\n                    step=\"any\"\r\n                    value={price}  \r\n                    placeholder={`${post.price}`}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Location</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={location}  \r\n                    placeholder={`${post.location}`} \r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Will deliver item</label>\r\n                <select\r\n                    name='willDeliver' \r\n                    placeholder={`${post.willDeliver}`}\r\n                    value={willDeliver}                    \r\n                    onChange={(e) => setWillDeliver(e.target.value)}>\r\n                    <option value='false'>No</option>\r\n                    <option value='true'>Yes</option>\r\n                </select>\r\n            </fieldset>\r\n            <button type='submit' disabled={ !title || !description || !price } className='edit-post-button'>Post</button>\r\n        </form>\r\n    </div>;\r\n};\r\n\r\nexport default EditPost;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <span>FOOTER STUFF WILL GO HERE</span>\r\n        <span className='attributes'>\r\n            icons by <a href='https://www.iconfinder.com/iconsets/basic-ui-2-line'>DailyYouth</a>\r\n        </span>\r\n    </footer>\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = ({ loggedIn, messages, userData }) => {\r\n    const posts = userData.posts;\r\n    if (loggedIn) \r\n    return <div className='content'>\r\n        {\r\n        userData \r\n                ? <h2 className='page-header'>Welcome {`${userData.username}`} </h2> \r\n                : ''\r\n        }\r\n        <Link to=\"/write\" className=\"post-button\"><img src='./img/write.png' height='18' width='18' /> Write A New Post</Link>\r\n        <div className='prev-msgs'>\r\n          <h3 className='prev-msgs-head'>Messages Received</h3>\r\n          {\r\n            messages.map(message => {\r\n              return <>\r\n              {userData._id !== message.fromUser._id ?\r\n               <div className='prev-msg'>\r\n                   <div className='prev-msg-title'>{message.fromUser.username} comented on \"{message.post.title}\":</div>\r\n                   <div>{message.content}</div>\r\n                </div>\r\n              : ''}\r\n              </>\r\n            })\r\n          }\r\n          <h3 className='prev-msgs-head'>Messages Sent</h3>\r\n          {\r\n            messages.map(message => {\r\n              return <>\r\n              {userData._id === message.fromUser._id ?\r\n               <div className='prev-msg'>\r\n                   <div className='prev-usrmsg-title'>You comented on \"{message.post.title}\":</div>\r\n                   <div>{message.content}</div>\r\n                </div>\r\n              : ''}\r\n              </>\r\n            })\r\n          }\r\n        </div>\r\n        <div className='prev-posts'>\r\n            {\r\n            posts ? <h3 className='prev-posts-head'>Your previous posts</h3> : ''\r\n            }\r\n\r\n            {\r\n            posts ? posts.map(post => {\r\n                return <>\r\n                    <div className='prev-post' key=\"post._id\">\r\n                        <div className='prev-post-title' post={post}>{post.title}{!post.active && ` (DELETED)`}:</div>\r\n                        <div>{post.description}</div>\r\n                    </div>\r\n                </>\r\n            }) : ''\r\n            }\r\n        </div>\r\n    </div>\r\n    \r\n    else return <div className='content welcome'>\r\n        <h2 className='page-header'>Welcome Guest!</h2>\r\n        <br />\r\n        <div className='guest'>You can find all sorts of knick-knacks here from people all around the world! Please create an account or log in in order to create a new listing or comment on an existing post.</div>\r\n        <div className='guest'>\r\n            <Link to='/account/login' className='link-to-reg-login'>Click here</Link> to log in or register!\r\n        </div>\r\n        <div className='guest'>\r\n            <Link to='/posts' className='link-to-reg-login'>Click here</Link> to view the posts!\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { callApi } from '../util';\r\n\r\nconst LogReg = ({ setLoggedIn, setMessages, setUserData, setToken }) => {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ verPass, setVerPass ] = useState('');\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    return <>\r\n    <div>\r\n        \r\n        <div className='form-container'>\r\n            <div className='login-header'>            \r\n                {\r\n                params.method === 'register' \r\n                    ? <h3 className='header'>Register a new account</h3> \r\n                    : <h3 className='header'>Login to your account</h3>\r\n                }           \r\n            </div>\r\n            <form className='log-reg' onSubmit={async (e) =>{\r\n                e.preventDefault();\r\n                try{ \r\n                    const resp = await callApi ({\r\n                        url: `/users/${params.method}`,\r\n                        method: 'POST',\r\n                        body: {\r\n                            user: {\r\n                                username,\r\n                                password\r\n                            }\r\n                        }\r\n                    })\r\n                    \r\n                    if(resp.data) {\r\n                        const userResp = await callApi({url: '/users/me', token: resp.data.token});\r\n\r\n                        setToken(resp.data.token);\r\n                        setUserData(userResp.data);\r\n                        setLoggedIn(true);\r\n                        setMessages(userResp.data.messages);\r\n\r\n                        if (resp.data.token) {\r\n                          history.push('/');\r\n                        }\r\n                    }\r\n                }\r\n                catch(error) {\r\n                    console.error(error);\r\n                };                \r\n            }}>\r\n                <fieldset className='input-fieldset'>\r\n                    <label>User name</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='text'\r\n                        name='Login Name'\r\n                        placeholder='enter your user name' \r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                <fieldset className='input-fieldset'>\r\n                    <label>Password</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='password' \r\n                        name='Password'\r\n                        placeholder='password (min length 6 chars)' \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                {\r\n                params.method === 'register' \r\n                    ? <fieldset className='input-fieldset'>\r\n                        <label>Verify Password</label>\r\n                            <input \r\n                                className='input-field' \r\n                                type='password' \r\n                                name='Verify Password'\r\n                                placeholder='re-enter your password' \r\n                                onChange={(e) => setVerPass(e.target.value)}\r\n                            />\r\n                    </fieldset>\r\n                    : ''\r\n                }\r\n                \r\n                {\r\n                params.method === 'register' \r\n                    ? <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 6 || password !== verPass }>\r\n                        Register\r\n                    </button> \r\n                    : <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 6 }>\r\n                        Login\r\n                    </button>\r\n                }\r\n\r\n                {\r\n                params.method === 'register' \r\n                ? <>\r\n                    <span>Already have an account yet? </span>\r\n                    <Link to=\"/account/login\" className='link-to-reg-login'>\r\n                        Click here to log in!\r\n                    </Link>\r\n                </> \r\n                : <>\r\n                    <span>Already have an account yet? </span>\r\n                    <Link to=\"/account/register\" className='link-to-reg-login'>\r\n                        Click here to register!\r\n                    </Link>\r\n                </>\r\n                }\r\n            </form>\r\n            \r\n        </div>\r\n    </div>\r\n</>\r\n};\r\n\r\nexport default LogReg;","import React, { useState } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport { callApi } from '../util'\r\n\r\nimport {\r\n    Search,\r\n    SinglePost\r\n} from './'\r\n\r\n\r\n\r\nconst Posts = ({setPosts, fetchPosts, loggedIn, posts, token, userData}) => {\r\n    const history = useHistory();\r\n    const handleDelete = async (postId) => {\r\n        const respObj = await callApi({\r\n            method: 'DELETE',\r\n            url: `/posts/${postId}`,\r\n            token\r\n        });\r\n\r\n        await fetchPosts()\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <div className='posts-header'>\r\n                <h2 className='page-header'>Posts</h2>\r\n                {\r\n                    token \r\n                            ? <Link to=\"/write\" className=\"post-button\"><img src='./img/write.png' height='18' width='18' /> Write A New Post</Link> \r\n                            : <Link to=\"/write\" className=\"post-button-disabled\"><img src='./img/write.png' height='18' width='18' /> Write A New Post</Link>              \r\n                }\r\n                <Search posts={posts} setPosts={setPosts} fetchPosts={fetchPosts} />                \r\n            </div>\r\n            {\r\n                posts.map(post => <SinglePost key={post._id} post={post} loggedIn={loggedIn}>\r\n                    {   \r\n                        post && <Link to={`/posts/${post._id}`} className='view-post-button'>VIEW</Link>\r\n                    }\r\n                    {\r\n                        post.author._id === userData._id && <Link to={`/posts/edit/${post._id}`} className='edit-post-button'>EDIT</Link>\r\n                    }\r\n                    {\r\n                        post.author._id === userData._id && <button className='delete-post' onClick={() => handleDelete(post._id)}><img src={\"../img/trash.png\"} width='13' height='13' />DELETE</button>                   \r\n                    }                    \r\n                </SinglePost>)\r\n            }\r\n        </div>\r\n    </>\r\n}\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { callApi } from '../util';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst WriteMessage = ({post, token}) => {\r\n  const [content, setContent ] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        const url = `/posts/${post._id}/messages`;\r\n        const data = await callApi({\r\n            method: 'POST',\r\n            url,\r\n            token,\r\n            body: {\r\n                message: {\r\n                content\r\n                }\r\n            }\r\n        });\r\n        history.push('./')\r\n    }\r\n    catch (error) {\r\n        console.error(error)\r\n    }\r\n    \r\n  };\r\n  return <>\r\n    <form onSubmit={handleSubmit} className='search-form'>\r\n      <input className='message-input' value={content} placeholder=\"Write a reply\" onChange={(e) => setContent(e.target.value)}></input>\r\n      <button className='send-message-button' type=\"submit\" disabled={!content}>Send</button>\r\n    </form>\r\n  </>\r\n}\r\n\r\nexport default WriteMessage;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport SinglePost from './SinglePost';\r\nimport WriteMessage from './WriteMessage';\r\n\r\nconst PostView = ({posts, loggedIn, userData, token}) => {\r\n  const {postId} = useParams();\r\n  const post = posts.find(post => post._id === postId);\r\n   \r\n  return <>\r\n    <SinglePost post={post}>\r\n      {\r\n         post && post.messages && post.messages.map(message => <div key={message._id}>message: {message.content}</div>)\r\n      }\r\n      {\r\n        loggedIn && userData._id !== post.author._id && <WriteMessage post={post} token={token}/>\r\n      }\r\n    </SinglePost>\r\n  </>\r\n}\r\n\r\nexport default PostView;","import React, { useState } from 'react';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst Search = ({fetchPosts, posts, setPosts}) => {\r\n    // const [filteredPosts, setFilteredPosts] = useState([])\r\n    const [query, setQuery] = useState('')\r\n    const [isTitle, setIsTitle] = useState(true);\r\n    \r\n    const handleFilter = async () => {\r\n        let filteredPosts\r\n        isTitle \r\n            ? filteredPosts = posts.filter(post => post.title.toLowerCase().includes( query.toLowerCase() ))\r\n            : filteredPosts = posts.filter(post => post.description.toLowerCase().includes( query.toLowerCase() ))\r\n        // setFilteredPosts(filteredPosts);\r\n        setPosts(filteredPosts);\r\n        query === '' && await fetchPosts();\r\n    }\r\n\r\n    return <form className='search-form' onChange={handleFilter}>\r\n        <input name='search' type='text' placeholder='FILTER POSTS' className='search-input' value={query} onChange={(e)=> setQuery(e.target.value)} />       \r\n        <button type='submit'className='search-button' >reset</button>\r\n        <div></div>\r\n    </form>\r\n}\r\n\r\nexport default Search;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { callApi } from '../util';\r\n\r\nconst WritePost = ({ setPosts, token }) => {\r\n    const [ location, setLocation ] = useState('')\r\n    const [ title, setTitle ] = useState('');    \r\n    const [ description, setDescription ] = useState('');\r\n    const [ price, setPrice ] = useState('');\r\n    const [ willDeliver, setWillDeliver ] = useState(false);\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleWrite = async (e) => {\r\n        e.preventDefault();\r\n        const postResp = await callApi({\r\n            url: '/posts', \r\n            method: 'POST', \r\n            token, \r\n            body: {\r\n                post: {\r\n                    location, \r\n                    title, \r\n                    description, \r\n                    price: `$${price}`, \r\n                    willDeliver\r\n                }\r\n            }\r\n        });\r\n        const postsResp = await callApi({url: '/posts', token})\r\n        setPosts(postsResp.data.posts);\r\n        history.push('/posts')\r\n    }\r\n\r\n    return <div>\r\n        <h3>Post a new listing!</h3>\r\n\r\n        <form onSubmit = {handleWrite}>\r\n            <fieldset>\r\n                <label>Title</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={title}  \r\n                    placeholder='Title' \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Description</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='description'\r\n                    value={description}  \r\n                    placeholder='Description'\r\n                    style={{height: 100}} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Price</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='number' \r\n                    name='price'\r\n                    min=\"1\"\r\n                    step=\"any\"\r\n                    value={price}  \r\n                    placeholder='$0.00' \r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Location</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={location}  \r\n                    placeholder='Location' \r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Will deliver item</label>\r\n                <select\r\n                    name='willDeliver' \r\n                    placeholder='No'\r\n                    value={willDeliver}                    \r\n                    onChange={(e) => setWillDeliver(e.target.value)}>\r\n                    <option value='false'>No</option>\r\n                    <option value='true'>Yes</option>\r\n                </select>\r\n            </fieldset>\r\n            <button type='submit' disabled={ !title || !description || !price } className='edit-post-button'>Post</button>\r\n        </form>\r\n    </div>;\r\n};\r\n\r\nexport default WritePost;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.querySelector('#app')\n);"],"sourceRoot":""}