{"version":3,"sources":["components/App.js","util/index.js","components/SinglePost.js","components/EditPost.js","components/Footer.js","components/Home.js","components/LogReg.js","components/Messages.js","components/Posts.js","components/WriteMessage.js","components/PostView.js","components/Search.js","components/SingleMessage.js","components/WritePost.js","index.js"],"names":["App","useState","active","setActive","currentPostId","setCurrentPostId","loggedIn","setLoggedIn","messages","setMessages","posts","setPosts","token","setToken","userData","setUserData","isExpanded","setIsExpanded","fetchPosts","a","fetch","process","response","json","results","data","props","useEffect","error","console","className","to","onClick","id","exact","path","callApi","url","method","body","options","toUpperCase","headers","JSON","stringify","SinglePost","children","post","e","log","title","author","username","description","price","location","willDeliver","EditPost","setLocation","setTitle","setDescription","setPrice","setWillDeliver","postId","useParams","history","useHistory","find","_id","handleWrite","preventDefault","postsResp","push","onSubmit","type","name","value","placeholder","onChange","target","style","height","min","step","disabled","Footer","href","Home","map","key","LogReg","setUsername","password","setPassword","verPass","setVerPass","params","user","resp","userResp","length","Messages","message","Posts","handleDelete","src","width","WriteMessage","content","setContent","handleSubmit","PostView","comments","comment","Search","SingleMessage","fromUser","WritePost","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.86e9b509.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport {\r\n  EditPost,\r\n  Footer, \r\n  LogReg,\r\n  Posts,\r\n  Home,\r\n  PostView,\r\n  Search,\r\n  WriteMessage,\r\n  WritePost\r\n} from './'\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst App = () => {\r\n  const [ active, setActive ] = useState(false);\r\n  const [ currentPostId, setCurrentPostId ] = useState('');\r\n  const [ loggedIn, setLoggedIn ] = useState(false);\r\n  const [ messages, setMessages ] = useState([]);\r\n  const [ posts, setPosts ] = useState([]);  \r\n  const [ token, setToken ] = useState('');\r\n  const [ userData, setUserData ] = useState({});\r\n  const [ isExpanded, setIsExpanded ] = useState(false)\r\n  \r\n  const fetchPosts = async () => {\r\n    const response = await fetch(`${REACT_APP_BASE_URL}/posts`);            \r\n    const results = await response.json();\r\n    const posts = results.data.posts;\r\n    if (posts) setPosts(posts);\r\n  }\r\n  \r\n  const props = {\r\n    active,\r\n    setActive,\r\n    currentPostId,\r\n    setCurrentPostId, \r\n    loggedIn, \r\n    setLoggedIn, \r\n    token, \r\n    setToken, \r\n    posts, \r\n    setPosts, \r\n    userData, \r\n    setUserData, \r\n    messages, \r\n    setMessages,\r\n    isExpanded,\r\n    setIsExpanded,\r\n\r\n    fetchPosts\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    try {      \r\n      fetchPosts();      \r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  }, [token]);\r\n\r\n  return <>\r\n      <header className=\"site-header\">\r\n        <Link to ='/home' className='logo'><h1>Stranger's Things</h1></Link>       \r\n  \r\n        <div className='link-bar'>\r\n          <Link to=\"/posts\" className=\"nav-link\">Posts</Link>   \r\n          <Link to=\"/home\" className=\"nav-link\">Home</Link>\r\n          { \r\n            token\r\n                  ? <button onClick={() => { setToken(''); setLoggedIn(false)}} className='nav-link logout set-right'>Log out</button>\r\n                  : <Link to=\"/account/login\" className=\"nav-link set-right\">Login/Register</Link>\r\n          }\r\n        </div>\r\n      </header>\r\n  \r\n      <main id='content'>\r\n        <Route exact path=\"/account/:method\">\r\n          <LogReg {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/'>\r\n          <Home {...props} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/home\">\r\n          <Home {...props}/>\r\n        </Route>\r\n  \r\n        <Route exact path=\"/posts\">\r\n          <Posts {...props} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/search\">\r\n          <Search {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/posts/:postId'>\r\n          <PostView {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/posts/edit/:postId'>\r\n          <EditPost {...props} />\r\n        </Route>\r\n  \r\n        <Route exact path=\"/write\">\r\n          <WritePost {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/message'>\r\n          <WriteMessage {...props} />\r\n        </Route>\r\n    </main>\r\n    <Footer />\r\n  </>\r\n}\r\n\r\nexport default App;","const { REACT_APP_BASE_URL } = process.env;\r\n\r\nexport const callApi = async ({url, method, token, body}) => {\r\n  try {\r\n    const options = {\r\n      method: method ? method.toUpperCase() : 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body)\r\n    };\r\n    if (token) options.headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\r\n    const data = await response.json();\r\n    if(data.error) {\r\n      throw (data.error)\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst SinglePost = ({ children, post, setIsExpanded }) => {\r\n    \r\n    return post\r\n    ? <div className='post-listing' onClick={e =>\r\n        console.log('clicked')}>\r\n        <span className='single-post-title'><h3 className='post-title'>{post.title}</h3><span className='author'>by <span className='post-author'>{post.author.username}</span></span></span>\r\n        <span className='description'>{post.description}</span>\r\n        <br />\r\n        <span className='post-bottom'>\r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Price:</h3> {post.price}</span> \r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Location:</h3> {post.location}</span>\r\n            <span className=\"post-bottom-elem\"><h3 className='post-elem-header'>Will Deliver:</h3> { post.willDeliver ? 'yes' : 'no' }</span>\r\n            { children }            \r\n        </span>        \r\n    </div>\r\n    : 'Loading...'\r\n}\r\n\r\nexport default SinglePost;","import React, { useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\nimport { callApi } from '../util';\r\n\r\nimport SinglePost from './SinglePost'\r\n\r\nconst EditPost = ({ setPosts, posts, token }) => {\r\n    const [ location, setLocation ] = useState('')\r\n    const [ title, setTitle ] = useState('');    \r\n    const [ description, setDescription ] = useState('');\r\n    const [ price, setPrice ] = useState('');\r\n    const [ willDeliver, setWillDeliver ] = useState(false);\r\n        \r\n    const {postId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const post = posts.find(post => post._id === postId);\r\n\r\n    console.log(post)\r\n\r\n    const handleWrite = async (e) => {\r\n        e.preventDefault();\r\n        const postResp = await callApi({\r\n            url: `/posts/${postId}`, \r\n            method: 'PATCH', \r\n            token, \r\n            body: {\r\n                post: {\r\n                    location, \r\n                    title, \r\n                    description, \r\n                    price, \r\n                    willDeliver\r\n                }\r\n            }\r\n        });\r\n        const postsResp = await callApi({url: '/posts', token})\r\n        setPosts(postsResp.data.posts);\r\n        history.push('/posts')\r\n    }\r\n\r\n    return <div>\r\n        <h3>Edit Post</h3>\r\n\r\n        <SinglePost post={post}></SinglePost>\r\n\r\n        <form onSubmit = {handleWrite}>\r\n            <fieldset>\r\n                <label>Title</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={title}  \r\n                    placeholder={`${post.title}`} \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Description</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='description'\r\n                    value={description}  \r\n                    placeholder={`${post.description}`}\r\n                    style={{height: 100}} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Price</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='number' \r\n                    name='price'\r\n                    min=\"1\"\r\n                    step=\"any\"\r\n                    value={price}  \r\n                    placeholder={`${post.price}`}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Location</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={location}  \r\n                    placeholder={`${post.location}`} \r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Will deliver item</label>\r\n                <select\r\n                    name='willDeliver' \r\n                    placeholder={`${post.willDeliver}`}\r\n                    value={willDeliver}                    \r\n                    onChange={(e) => setWillDeliver(e.target.value)}>\r\n                    <option value='false'>No</option>\r\n                    <option value='true'>Yes</option>\r\n                </select>\r\n            </fieldset>\r\n            <button type='submit' disabled={ !title || !description || !price }>Post</button>\r\n        </form>\r\n    </div>;\r\n};\r\n\r\nexport default EditPost;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <footer>\r\n        <span>FOOTER STUFF WILL GO HERE</span>\r\n        <span className='attributes'>\r\n            icons by <a href='https://www.iconfinder.com/iconsets/basic-ui-2-line'>DailyYouth</a>\r\n        </span>\r\n    </footer>\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n    Messages\r\n} from './index'\r\n\r\nconst Home = ({ loggedIn, messages, userData }) => {\r\n    const posts = userData.posts;\r\n    console.log(posts)\r\n    if (loggedIn) \r\n    return <div className='content'>\r\n        {\r\n        userData \r\n                ? <h2 className='page-header'>Welcome {`${userData.username}`} </h2> \r\n                : ''\r\n        }\r\n        <Link to=\"/write\" className=\"post-button\">New Post</Link>\r\n        <Messages className='messages' userData={userData} messages={messages} />\r\n        <div className='prev-posts'>\r\n            {\r\n            posts ? <h3 className='prev-posts-head'>Your previous posts</h3> : ''\r\n            }\r\n\r\n            {\r\n            posts ? posts.map(post => {\r\n                return <span className='prev-post' key=\"post._id\"><h3 className='prev-post-title'>{post.title}:</h3>  {post.description}</span>\r\n            }) : ''\r\n            }\r\n        </div>\r\n    </div>\r\n    \r\n    else return <div className='content'>\r\n        <h2 className='page-header'>Welcome Guest!</h2>\r\n        <br />\r\n        <div>\r\n            <Link to='/account/login' className='link-to-reg-login'>Click here</Link> to log in or register!\r\n        </div>\r\n        <div>\r\n            <Link to='/posts' className='link-to-reg-login'>Click here</Link> to view the posts!\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { callApi } from '../util';\r\n\r\nconst LogReg = ({ setLoggedIn, setMessages, setUserData, setToken }) => {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ verPass, setVerPass ] = useState('');\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    return <>\r\n    <div>\r\n        \r\n        <div className='form-container'>\r\n            <div className='login-header'>            \r\n                {\r\n                params.method === 'register' \r\n                    ? <h3 className='header'>Register a new account</h3> \r\n                    : <h3 className='header'>Login to your account</h3>\r\n                }           \r\n            </div>\r\n            <form className='log-reg' onSubmit={async (e) =>{\r\n                e.preventDefault();\r\n                try{ \r\n                    const resp = await callApi ({\r\n                        url: `/users/${params.method}`,\r\n                        method: 'POST',\r\n                        body: {\r\n                            user: {\r\n                                username,\r\n                                password\r\n                            }\r\n                        }\r\n                    })\r\n                    \r\n                    if(resp.data) {\r\n                        const userResp = await callApi({url: '/users/me', token: resp.data.token});\r\n\r\n                        setToken(resp.data.token);\r\n                        setUserData(userResp.data);\r\n                        setLoggedIn(true);\r\n                        setMessages(userResp.data.messages);\r\n\r\n                        if (resp.data.token) {\r\n                          history.push('/');\r\n                        }\r\n                    }\r\n                }\r\n                catch(error) {\r\n                    console.error(error);\r\n                };                \r\n            }}>\r\n                <fieldset className='input-fieldset'>\r\n                    <label>User name</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='text'\r\n                        name='Login Name'\r\n                        placeholder='enter your user name' \r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                <fieldset className='input-fieldset'>\r\n                    <label>Password</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='password' \r\n                        name='Password'\r\n                        placeholder='password (min length 6 chars)' \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                {\r\n                params.method === 'register' \r\n                    ? <fieldset className='input-fieldset'>\r\n                        <label>Verify Password</label>\r\n                            <input \r\n                                className='input-field' \r\n                                type='password' \r\n                                name='Verify Password'\r\n                                placeholder='re-enter your password' \r\n                                onChange={(e) => setVerPass(e.target.value)}\r\n                            />\r\n                    </fieldset>\r\n                    : ''\r\n                }\r\n                \r\n                {\r\n                params.method === 'register' \r\n                    ? <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 6 || password !== verPass }>\r\n                        Register\r\n                    </button> \r\n                    : <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 6 }>\r\n                        Login\r\n                    </button>\r\n                }\r\n\r\n                {\r\n                params.method === 'register' \r\n                ? <>\r\n                    <span>Already have an account yet? </span>\r\n                    <Link to=\"/account/login\" className='link-to-reg-login'>\r\n                        Click here to log in!\r\n                    </Link>\r\n                </> \r\n                : <>\r\n                    <span>Already have an account yet? </span>\r\n                    <Link to=\"/account/register\" className='link-to-reg-login'>\r\n                        Click here to register!\r\n                    </Link>\r\n                </>\r\n                }\r\n            </form>\r\n            \r\n        </div>\r\n    </div>\r\n</>\r\n};\r\n\r\nexport default LogReg;","import React from 'react';\r\n\r\nimport {\r\n    SingleMessage\r\n} from './index'\r\n\r\nconst Messages = ({ messages }) => {\r\n    return <div className='messages'>\r\n            <div className='message-header'>\r\n                <h2 className='header'>Your messages</h2>                \r\n            </div>\r\n            {\r\n                messages.map(message => <SingleMessage key={message._id} message={message} />)\r\n            }\r\n        </div>;\r\n};\r\n\r\nexport default Messages;","import React, { useState } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport { callApi } from '../util'\r\n\r\nimport {\r\n    Search,\r\n    SinglePost\r\n} from './'\r\n\r\n\r\n\r\nconst Posts = ({fetchPosts, loggedIn, posts, token, userData}) => {\r\n    const history = useHistory();\r\n\r\n    const handleDelete = async (postId) => {\r\n        const respObj = await callApi({\r\n            method: 'DELETE',\r\n            url: `/posts/${postId}`,\r\n            token\r\n        });\r\n\r\n        await fetchPosts()\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <div className='posts-header'>\r\n                <h2 className='page-header'>Posts</h2>\r\n                {\r\n                    token \r\n                            ? <Link to=\"/write\" className=\"post-button\">New Post</Link> \r\n                            : <span className='post-button disabled'>New Post</span>                \r\n                }\r\n                <Search />                \r\n            </div>\r\n            {\r\n                posts.map(post => <SinglePost key={post._id} post={post} loggedIn={loggedIn}>\r\n                    {   \r\n                        post && <Link to={`/posts/${post._id}`} className='view-post-button'>VIEW</Link>\r\n                    }\r\n                    {\r\n                        post.author._id === userData._id && <Link to={`/posts/edit/${post._id}`} className='edit-post-button'>EDIT</Link>\r\n                    }\r\n                    {\r\n                        post.author._id === userData._id && <button className='delete-post' onClick={() => handleDelete(post._id)}><img src={\"../img/trash18px.png\"} width='13' height='13' />DELETE</button>                   \r\n                    }                    \r\n                </SinglePost>)\r\n            }\r\n        </div>\r\n    </>\r\n}\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { callApi } from '../util';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst WriteMessage = ({post, token}) => {\r\n  const [content, setContent ] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        const url = `/posts/${post._id}/messages`;\r\n        const data = await callApi({\r\n            method: 'POST',\r\n            url,\r\n            token,\r\n            body: {\r\n                message: {\r\n                content\r\n                }\r\n            }\r\n        });\r\n        history.push('./')\r\n    }\r\n    catch (error) {\r\n        console.error(error)\r\n    }\r\n    \r\n  };\r\n  return <>\r\n    <form onSubmit={handleSubmit}>\r\n      <input value={content} placeholder=\"Write your reply\" onChange={(e) => setContent(e.target.value)}></input>\r\n      <button type=\"submit\" disabled={!content}>Send</button>\r\n    </form>\r\n  </>\r\n}\r\n\r\nexport default WriteMessage;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport SinglePost from './SinglePost';\r\nimport WriteMessage from './WriteMessage';\r\n\r\nconst PostView = ({posts, loggedIn, userData, token}) => {\r\n  const {postId} = useParams();\r\n  const post = posts.find(post => post._id === postId);\r\n   \r\n  return <>\r\n    <SinglePost post={post}>\r\n      {\r\n         post && post.comments && post.comments.map(comment => <div key={comment.id}>Comment: {comment.content}</div>)\r\n      }\r\n      {\r\n        loggedIn && userData._id !== post.author._id && <WriteMessage post={post} token={token}/>\r\n      }\r\n    </SinglePost>\r\n  </>\r\n}\r\n\r\nexport default PostView;","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return <form className='search-form'>\r\n        <input name='search' type='search' placeholder='FILTER POSTS' className='search-input'></input>\r\n        <button type='submit'className='search-button'>Go</button>\r\n    </form>\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst SingleMessage = ({message}) => {\r\n    return message\r\n    ? <div className=\"message-listing\">\r\n        <h4 className='message-header'>{message.fromUser.username} commented on \"{message.post.title}\"</h4>\r\n        <span className='message-content'>{message.content}</span>        \r\n      </div>\r\n    : 'Loading...'\r\n}\r\n\r\nexport default SingleMessage;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { callApi } from '../util';\r\n\r\nconst WritePost = ({ setPosts, token }) => {\r\n    const [ location, setLocation ] = useState('')\r\n    const [ title, setTitle ] = useState('');    \r\n    const [ description, setDescription ] = useState('');\r\n    const [ price, setPrice ] = useState('');\r\n    const [ willDeliver, setWillDeliver ] = useState(false);\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleWrite = async (e) => {\r\n        e.preventDefault();\r\n        const postResp = await callApi({\r\n            url: '/posts', \r\n            method: 'POST', \r\n            token, \r\n            body: {\r\n                post: {\r\n                    location, \r\n                    title, \r\n                    description, \r\n                    price, \r\n                    willDeliver\r\n                }\r\n            }\r\n        });\r\n        const postsResp = await callApi({url: '/posts', token})\r\n        setPosts(postsResp.data.posts);\r\n        history.push('/posts')\r\n    }\r\n\r\n    return <div>\r\n        <h3>Post a new listing!</h3>\r\n\r\n        <form onSubmit = {handleWrite}>\r\n            <fieldset>\r\n                <label>Title</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={title}  \r\n                    placeholder='Title' \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Description</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='description'\r\n                    value={description}  \r\n                    placeholder='Description'\r\n                    style={{height: 100}} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Price</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='number' \r\n                    name='price'\r\n                    min=\"1\"\r\n                    step=\"any\"\r\n                    value={price}  \r\n                    placeholder='$0.00' \r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Location</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={location}  \r\n                    placeholder='Location' \r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Will deliver item</label>\r\n                <select\r\n                    name='willDeliver' \r\n                    placeholder='No'\r\n                    value={willDeliver}                    \r\n                    onChange={(e) => setWillDeliver(e.target.value)}>\r\n                    <option value='false'>No</option>\r\n                    <option value='true'>Yes</option>\r\n                </select>\r\n            </fieldset>\r\n            <button type='submit' disabled={ !title || !description || !price }>Post</button>\r\n        </form>\r\n    </div>;\r\n};\r\n\r\nexport default WritePost;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.querySelector('#app')\n);"],"sourceRoot":""}