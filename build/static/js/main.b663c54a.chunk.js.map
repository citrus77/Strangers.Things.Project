{"version":3,"sources":["components/App.js","components/Home.js","components/LogReg.js","components/Messages.js","components/Posts.js","components/Search.js","components/SingleMessage.js","components/SinglePost.js","components/Write.js","index.js"],"names":["REACT_APP_BASE_URL","process","App","useState","loggedIn","setLoggedIn","token","setToken","posts","setPosts","userData","setUserData","messages","setMessages","props","useEffect","a","fetch","response","json","results","data","fetchPosts","error","console","headers","fetchUserData","className","to","id","onClick","exact","path","Home","username","LogReg","setUsername","password","setPassword","verPass","setVerPass","params","useParams","history","useHistory","method","onSubmit","e","preventDefault","body","JSON","stringify","user","resp","respObj","push","type","name","placeholder","onChange","target","value","disabled","length","Messages","map","message","key","_id","Posts","post","Search","SingleMessage","content","fromUser","SinglePost","title","description","Write","location","setLocation","setTitle","setDescription","price","setPrice","willDeliver","setWillDeliver","style","height","min","step","disable","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b663c54a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport {  \r\n  LogReg,\r\n  Posts,\r\n  Home,\r\n  Search,\r\n  Write\r\n} from './index'\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst App = () => {\r\n  const [ loggedIn, setLoggedIn ] = useState(false);  \r\n  const [ token, setToken ] = useState('');\r\n  const [ posts, setPosts ] = useState([]);  \r\n  const [ userData, setUserData ] = useState({});\r\n  const [ messages, setMessages ] = useState([]);\r\n  \r\n  const props = { \r\n    loggedIn, \r\n    setLoggedIn, \r\n    token, \r\n    setToken, \r\n    posts, \r\n    setPosts, \r\n    userData, \r\n    setUserData, \r\n    messages, \r\n    setMessages \r\n  }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const fetchPosts = async () => {\r\n        const response = await fetch(`${REACT_APP_BASE_URL}/posts/`);            \r\n        const results = await response.json();\r\n        const posts = results.data.posts;\r\n        if (posts) setPosts(posts);\r\n      }\r\n      fetchPosts();      \r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n    \r\n    try {\r\n      const fetchUserData = async () => {        \r\n        const response = await fetch(`${REACT_APP_BASE_URL}/users/me`, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n        });          \r\n        const results = await response.json();\r\n        const userData = results.data;\r\n        // console.log(userData)\r\n        if (userData) {\r\n          setUserData(userData);\r\n          const messages = userData.messages\r\n          setMessages(messages)\r\n          // console.log(messages)\r\n        }\r\n      }\r\n      fetchUserData();      \r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n  }, [token]);\r\n\r\n  return <>    \r\n    <main className=\"content\">\r\n      <header className=\"page-header\">\r\n        <Link to ='/home' className='logo'><h1>Stranger's Things</h1></Link>       \r\n  \r\n        <div id='nav'>\r\n          <span className=\"link-bar\">\r\n            <Link to=\"/posts\" className=\"nav-link\">Posts</Link>   \r\n            <Link to=\"/home\" className=\"nav-link\">Home</Link>\r\n            { \r\n              token\r\n                ? <button onClick={() => { setToken(''); setLoggedIn(false)}} className='nav-link logout'>Log out</button>\r\n                : <Link to=\"/account/login\" className=\"nav-link\">Login/Register</Link>\r\n            }\r\n          </span>\r\n        </div>\r\n      </header>\r\n  \r\n      <div id='content'>\r\n        <Route exact path=\"/account/:method\">\r\n          <LogReg {...props} />\r\n        </Route>\r\n\r\n        <Route exact path='/'>\r\n          <Home { ...props } />\r\n        </Route>\r\n\r\n        <Route exact path=\"/home\">\r\n          <Home {...props}/>\r\n        </Route>\r\n  \r\n        <Route exact path=\"/posts\">\r\n          <Posts {...props} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/search\">\r\n          <Search {...props} />\r\n        </Route>\r\n  \r\n        <Route exact path=\"/write\">\r\n          <Write {...props} />\r\n        </Route>\r\n      </div>\r\n  \r\n    </main>\r\n  </>\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n    Messages\r\n} from './index'\r\n\r\nconst Home = ({ loggedIn, messages, userData }) => {\r\n    if (loggedIn) \r\n    return <>\r\n        {\r\n        userData ? <h2 className='header'>Welcome {`${userData.username}`} </h2> : ''\r\n        }\r\n        <Messages userData={userData} messages={messages} />\r\n    </>\r\n    \r\n    else return <>\r\n        <h2 className='header'>Welcome Guest!</h2>\r\n        <br />\r\n        <div>\r\n            <Link to='/account/login' className='link-to-reg-login'>Click here</Link> to log in or register!\r\n        </div>\r\n        <div>\r\n            <Link to='/posts' className='link-to-reg-login'>Click here</Link> to view the posts!\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst LogReg = ({ setLoggedIn, setToken }) => {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ verPass, setVerPass ] = useState('');\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    return <>\r\n    <main className='content'>\r\n        <header className='post-header'>\r\n            <span className='placeholder' />\r\n            {\r\n            params.method === 'register' \r\n                ? <h3 className='header'>Register a new account</h3> \r\n                : <h3 className='header'>Login to your account</h3>\r\n            }\r\n            \r\n            <span className='placeholder' />\r\n        </header>\r\n        <div className='form-container'>\r\n            <form className='log-reg' onSubmit={async (e) =>{\r\n                e.preventDefault();\r\n                try{\r\n                    const resp = await fetch(`${REACT_APP_BASE_URL}/users/${params.method}`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                        user: {\r\n                            username,\r\n                            password\r\n                        }\r\n                        })\r\n                    });\r\n                    const respObj = await resp.json();\r\n                    if(respObj.data) {\r\n                        setToken(respObj.data.token);\r\n                        setLoggedIn(true)\r\n                        if (respObj.data.token) {\r\n                            history.push('/profile');\r\n                        }\r\n                    }\r\n                }\r\n                catch(error) {\r\n                    console.error(error);\r\n                };                \r\n            }}>\r\n                <fieldset className='input-fieldset'>\r\n                    <label>User name</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='text'\r\n                        name='Login Name'\r\n                        placeholder='enter your user name' \r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                <fieldset className='input-fieldset'>\r\n                    <label>Password</label>\r\n                    <input \r\n                        className='input-field' \r\n                        type='password' \r\n                        name='Password'\r\n                        placeholder='password (min length 6 chars)' \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </fieldset>\r\n\r\n                {\r\n                params.method === 'register' \r\n                    ? <fieldset className='input-fieldset'>\r\n                        <label>Verify Password</label>\r\n                            <input \r\n                                className='input-field' \r\n                                type='password' \r\n                                name='Verify Password'\r\n                                placeholder='re-enter your password' \r\n                                onChange={(e) => setVerPass(e.target.value)}\r\n                            />\r\n                    </fieldset>\r\n                    : ''\r\n                }\r\n                \r\n                {\r\n                params.method === 'register' \r\n                    ? <button className='post-button' type=\"submit\" disabled={!password || !username || password.length < 6 || password !== verPass }>\r\n                        Login\r\n                    </button> \r\n                    : <button className='post-button' type=\"submit\" disabled={!password || !username || password.length < 6 }>\r\n                        Login\r\n                    </button>\r\n                }\r\n\r\n            </form>\r\n            {\r\n            params.method === 'register' \r\n            ? <>\r\n                <span>Already have an account yet? </span>\r\n                <Link to=\"/account/login\" className='link-to-reg-login'>\r\n                    Click here to log in!\r\n                </Link>\r\n            </> \r\n            : <>\r\n                <span>Already have an account yet? </span>\r\n                <Link to=\"/account/register\" className='link-to-reg-login'>\r\n                    Click here to register!\r\n                </Link>\r\n            </>\r\n            }\r\n        </div>\r\n    </main>\r\n</>\r\n};\r\n\r\nexport default LogReg;","import React from 'react';\r\n\r\nimport {\r\n    SingleMessage\r\n} from './index'\r\n\r\nconst Messages = ({ messages }) => {\r\n    return <>\r\n        <main className='content'>\r\n            <header className='message-header'>\r\n                <h2 className='header'>Messages</h2>                \r\n            </header>\r\n            {\r\n                messages.map(message => <SingleMessage key={message._id} message={message} />)\r\n            }\r\n        </main>\r\n    </>;\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { BrowserRouter as Route, Link } from 'react-router-dom';\r\n\r\nimport {\r\n    SinglePost\r\n} from './index'\r\n\r\nconst Posts = ({posts, token}) => {\r\n    return <>\r\n        <main className='content'>\r\n            <header className='post-header'>\r\n                <Link to=\"/search\" className=\"post-button\">Search Posts</Link>\r\n                <h2 className='header'>Posts</h2>\r\n                {\r\n                token ? <Link to=\"/write\" className=\"post-button\">New Post</Link> : \r\n                <span className='post-button disabled'>New Post</span>                \r\n                }\r\n            </header>\r\n            {\r\n                posts.map(post => <SinglePost key={post._id} post={post} />)\r\n            }\r\n        </main>\r\n    </>\r\n}\r\nexport default Posts;","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return <span>Search</span>\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst SingleMessage = ({message}) => {\r\n    return message\r\n    ? <div className=\"message-listing\">\r\n        <h3 className='message-content'>{message.content}</h3>\r\n        <span className='message-sender'>{message.fromUser.username}</span>\r\n    </div>\r\n    : 'Loading...'\r\n}\r\n\r\nexport default SingleMessage;","import React from 'react';\r\n\r\nconst SinglePost = ({post}) => {\r\n    return post\r\n    ? <div className=\"post-listing\">\r\n        <h3 className='post-title'>{post.title}</h3>\r\n        <span className='description'>{post.description}</span>\r\n    </div>\r\n    : 'Loading...'\r\n}\r\n\r\nexport default SinglePost;","import React, { useState } from 'react';\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst Write = ({ token }) => {\r\n    const [ location, setLocation ] = useState('')\r\n    const [ title, setTitle ] = useState('');    \r\n    const [ description, setDescription ] = useState('');\r\n    const [ price, setPrice ] = useState('');\r\n    const [ willDeliver, setWillDeliver ] = useState(false);\r\n\r\n    return <>\r\n        <h3>Post a new listing!</h3>\r\n\r\n        <form onSubmit ={async (e) => {\r\n            e.preventDefault();\r\n            try{\r\n            fetch(`${REACT_APP_BASE_URL}/posts`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    post: {\r\n                        location,\r\n                        title,\r\n                        description,\r\n                        price,\r\n                        willDeliver\r\n                    }\r\n                })\r\n                })\r\n            } catch(error) {\r\n                console.error(error)\r\n            }\r\n        }}>\r\n            <fieldset>\r\n                <label>Title</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={title}  \r\n                    placeholder='Title' \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Description</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='description'\r\n                    value={description}  \r\n                    placeholder='Description'\r\n                    style={{height: 100}} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n            <label>Price</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='number' \r\n                    name='price'\r\n                    min=\"1\"\r\n                    step=\"any\"\r\n                    value={price}  \r\n                    placeholder='$0.00' \r\n                    onChange={(e) => setPrice('$' + e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Location</label>\r\n                <input \r\n                    className='input-field' \r\n                    type='text' \r\n                    name='title'\r\n                    value={location}  \r\n                    placeholder='Location' \r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label>Will deliver item</label>\r\n                <select\r\n                    name='willDeliver' \r\n                    placeholder='No'\r\n                    value={willDeliver}                    \r\n                    onChange={(e) => setWillDeliver(e.target.value)}>\r\n                    <option value='false'>No</option>\r\n                    <option value='true'>Yes</option>\r\n                </select>\r\n            </fieldset>\r\n            <button disable={ !title || !description }></button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default Write;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.querySelector('#app')\n);"],"sourceRoot":""}